name: Dependency Workflow

on:
  schedule:
    - cron: "0 12 * * 3"

jobs:

  checkDependencies:
    name: Check dependency versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Add secrets
        run: |
          echo $SIGNING_STORE_FILE | base64 -d > app/key.jks
          mkdir -p app/src/debug/dev/
          echo $FIREBASE_CONFIG_DEV_DEBUG | base64 -d > app/src/debug/dev/google-services.json
          mkdir -p app/src/release/dev/
          echo $FIREBASE_CONFIG_DEV_RELEASE | base64 -d > app/src/release/dev/google-services.json
          mkdir -p app/src/debug/qa/
          echo $FIREBASE_CONFIG_QA_DEBUG | base64 -d > app/src/debug/qa/google-services.json
          mkdir -p app/src/release/qa/
          echo $FIREBASE_CONFIG_QA_RELEASE | base64 -d > app/src/release/qa/google-services.json
          mkdir -p app/src/debug/prod/
          echo $FIREBASE_CONFIG_PROD_DEBUG | base64 -d > app/src/debug/prod/google-services.json
          mkdir -p app/src/release/prod/
          echo $FIREBASE_CONFIG_PROD_RELEASE | base64 -d > app/src/release/prod/google-services.json
        env:
          SIGNING_STORE_FILE: ${{ secrets.SIGNING_STORE_FILE }}
          FIREBASE_CONFIG_DEV_DEBUG: ${{ secrets.FIREBASE_CONFIG_DEV_DEBUG }}
          FIREBASE_CONFIG_DEV_RELEASE: ${{ secrets.FIREBASE_CONFIG_DEV_RELEASE }}
          FIREBASE_CONFIG_QA_DEBUG: ${{ secrets.FIREBASE_CONFIG_QA_DEBUG }}
          FIREBASE_CONFIG_QA_RELEASE: ${{ secrets.FIREBASE_CONFIG_QA_RELEASE }}
          FIREBASE_CONFIG_PROD_DEBUG: ${{ secrets.FIREBASE_CONFIG_PROD_DEBUG }}
          FIREBASE_CONFIG_PROD_RELEASE: ${{ secrets.FIREBASE_CONFIG_PROD_RELEASE }}
      - name: Decode local.properties
        run: |
          cat > local.properties << ENDOFFILE

          marvel.key.public=${{ secrets.MARVEL_KEY_PUBLIC }}
          marvel.key.private=${{ secrets.MARVEL_KEY_PRIVATE }}

          signing.key.alias=${{ secrets.SIGNING_KEY_ALIAS }}
          signing.key.password=${{ secrets.SIGNING_KEY_APASSWORD }}
          signing.store.file=key.jks
          signing.store.password=${{ secrets.SIGNING_STORE_PASSWORD }}
          ENDOFFILE
      - name: Calculate changed modules
        run: bash ./gradlew dependencyUpdates -DoutputFormatter=json
      - name: Parse dependency content
        run: bash ./gradlew parseDependencyJson
      - name: Upload dependency updates
        uses: actions/upload-artifact@v1
        with:
          name: dependency_updates
          path: build/dependencyUpdates/report.txt

  slackMessage:
    name: Post message to slack
    runs-on: ubuntu-latest
    needs: checkDependencies
    steps:
      - uses: actions/checkout@v2
      - name: Download dependency updates
        uses: actions/download-artifact@v1
        with:
          name: dependency_updates
      - name: Prepare output content
        run: |
          content="$(echo "$(cat dependency_updates/report.txt)")"
          echo ::set-env name=DEPENDENCY_UPDATES::"$content"
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_DEPENDENCY_WEBHOOK }}
          SLACK_CUSTOM_PAYLOAD: '{"text":"Updated Publish Dependencies
              available "\\n \\n" {{ DEPENDENCY_UPDATES
              }}","username": "Android Dependency Updates"}'
        uses: Ilshidur/action-slack@master
